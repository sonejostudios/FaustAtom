'.source.faust':

#import libs
  'import music.lib':
    'prefix': 'import music.lib'
    'body': 'import("music.lib");'

  'import effect.lib':
    'prefix': 'import effect.lib'
    'body': 'import("effect.lib");'

  'import filter.lib':
    'prefix': 'import filter.lib'
    'body': 'import("filter.lib");'

  'import math.lib':
    'prefix': 'import math.lib'
    'body': 'import("math.lib");'

  'import oscillator.lib':
    'prefix': 'import oscillator.lib'
    'body': 'import("oscillator.lib");'

  'import instrument.lib':
    'prefix': 'import instrument.lib'
    'body': 'import("instrument.lib");'

  'import hoa.lib':
    'prefix': 'import hoa.lib'
    'body': 'import("hoa.lib");'

  'import maxmsp.lib':
    'prefix': 'import maxmsp.lib'
    'body': 'import("maxmsp.lib");'

  'import reduce.lib':
    'prefix': 'import reduce.lib'
    'body': 'import("reduce.lib");'

  'import tonestack.lib':
    'prefix': 'import tonestack.lib'
    'body': 'import("tonestack.lib");'

  'import tube.lib':
    'prefix': 'import tube.lib'
    'body': 'import("tube.lib");'


#declare all
  'declare meta info all':
    'prefix': 'declare meta info all'
    'body': """
            declare name        "App's Name";
            declare version     "0.1";
            declare author      "Author's Name";
            declare copyright   "Copyright";
            declare license     "GPL v3";
            declare reference   "Website/Email";
            declare description	"Description";
    """


#sliders
  'slider.h':
    'prefix': 'slider.h'
    'body': 'hslider("${1:volume}",${2:0},${3:0},${4:1},${5:0.01})$6'

  'slider.v':
    'prefix': 'slider.v'
    'body': 'vslider("${1:volume}",${2:0},${3:0},${4:1},${5:0.01})$6'



  'slider.h dB':
    'prefix': 'slider.h dB'
    'body': 'hslider("Level dB[unit: dB]", 0, -70, 10, 1)'

  'slider.v dB':
    'prefix': 'slider.v dB'
    'body': 'vslider("Level dB[unit: dB]", 0, -70, 10, 1)'



  'knob':
    'prefix': 'knob'
    'body': 'hslider("knob[style: knob]", 0, 0, 1, 0.01)'



# special sliders
  'nentry':
    'prefix': 'nentry'
    'body': 'nentry("foo", 0, 0, 10, 1)'

  'menu':
    'prefix': 'menu'
    'body': """hslider("Menu[style:menu{'Zero':0 ; 'One':1 ; 'Two':2}]", 0, 0, 2, 1)"""

  'radio.h':
    'prefix': 'radio h'
    'body': """hslider("Radio Buttons[style:radio{'Zero':0 ; 'One':1 ; 'Two':2}]", 0, 0, 2, 1)"""

  'radio.v':
    'prefix': 'radio v'
    'body': """vslider("Radio Buttons[style:radio{'Zero':0 ; 'One':1 ; 'Two':2}]", 0, 0, 2, 1)"""


#gui bools
  'button':
    'prefix': 'button'
    'body': 'button("foo")'

  'checkbox':
    'prefix': 'checkbox'
    'body': 'checkbox("foo")'


#groups
  'group.h':
    'prefix': 'group.h'
    'body': 'hgroup("foo",$1)'

  'group.v':
    'prefix': 'group.v'
    'body': 'vgroup("foo",$1)'

  'group.tab':
    'prefix': 'group.tab'
    'body': 'tgroup("foo",$1)'



# bargraphs
  'bargraph.h':
    'prefix': 'bargraph.h'
    'body': 'hbargraph("h.bargraph", 0, 1)'

  'bargraph.v':
    'prefix': 'bargraph.v'
    'body': 'vbargraph("v.bargraph", 0, 1)'


  'bargraph.h dB':
    'prefix': 'bargraph.h dB'
    'body': 'hbargraph("dB graph[unit: dB]", -70, 10)'

  'bargraph.v dB':
    'prefix': 'bargraph.v dB'
    'body': 'vbargraph("dB graph[unit: dB]", -70, 10)'

  'bargraph LED':
    'prefix': 'bargraph LED'
    'body': 'hbargraph("led[style: led]", 0, 1)'


# delay tables
  'delay @':
    'prefix': 'delay @samples'
    'body': '_@10'

  'select2':
    'prefix': 'select2(_,_,_)'
    'body': 'select2(_,_,_)'

  'select3':
    'prefix': 'select3(_,_,_,_)'
    'body': 'select3(_,_,_,_)'


#arithmetics
  'int':
    'prefix': 'int'
    'body': 'int'

  'float':
    'prefix': 'float'
    'body': 'float'


#comparisons
  'comparison <':
    'prefix': 'comparison <'
    'body': '<'

  'comparison <=':
    'prefix': 'comparison <='
    'body': '<='

  'comparison >':
    'prefix': 'comparison >'
    'body': '>'

  'comparison >=':
    'prefix': 'comparison >='
    'body': '>='

  'comparison ==':
    'prefix': 'comparison =='
    'body': '=='

  'comparison !=':
    'prefix': 'comparison !='
    'body': '!='



# oscillators
  'osc(440) (music.lib)':
    'prefix': 'osc(440) (music.lib)'
    'body': 'osc(440)'

  'square(440) (oscillator.lib)':
    'prefix': 'square(440) (oscillator.lib)'
    'body': 'square(440)'

  'triangle(440) (oscillator.lib)':
    'prefix': 'triangle(440) (oscillator.lib)'
    'body': 'triangle(440)'

  'sawtooth(440) (oscillator.lib)':
    'prefix': 'sawtooth(440) (oscillator.lib)'
    'body': 'saw1(440)'

  'noise (music.lib)':
    'prefix': 'noise (music.lib)'
    'body': 'noise'

#LFOs
  'squarepos.lfo (oscillator.lib)':
    'prefix': 'squarepos.lfo (oscillator.lib)'
    'body': 'lf_squarewavepos(freq)'

  'trianglepos.lfo (oscillator.lib)':
    'prefix': 'trianglepos.lfo (oscillator.lib)'
    'body': 'lf_trianglepos(freq)'

  'sawtoothpos.lfo (oscillator.lib)':
    'prefix': 'sawtoothpos.lfo (oscillator.lib)'
    'body': 'lf_sawpos(freq)'

  'noise.lfo (oscillator.lib)':
    'prefix': 'noise.lfo (oscillator.lib)'
    'body': 'lfnoise(freq)'


#libs
  #music.lib
  'db2linear(x) (music.lib)':
    'prefix': 'db2linear(x) (music.lib)'
    'body': 'db2linear(x)'

  'linear2db(x) (music.lib)':
    'prefix': 'linear2db(x) (music.lib)'
    'body': 'linear2db(x)'



  #effect.lib
  'smooth(0.999) (effect.lib)':
    'prefix': 'smooth(0.999) (effect.lib)'
    'body': 'smooth(0.999)'

  'amp_follower(rel) (effect.lib)':
    'prefix': 'amp_follower(rel) (effect.lib)'
    'body': 'amp_follower(0.5)'

  'amp_follower_ud(att,rel) (effect.lib)':
    'prefix': 'amp_follower_ud(att,rel) (effect.lib)'
    'body': 'amp_follower_ud(0.5, 1)'

  'amp_follower_ar(att,rel) (effect.lib)':
    'prefix': 'amp_follower_ar(att,rel) (effect.lib)'
    'body': 'amp_follower_ar(1, 0.5)'


#presets

  'preset volume':
    'prefix': 'preset volume'
    'body': 'volume = hslider("vol", 0, 0, 1, 0.01) : smooth(0.999);'

  'preset mute':
    'prefix': 'preset mute'
    'body': 'mute = 1-checkbox("mute") : smooth(0.999);'

  'preset onoff':
    'prefix': 'preset onoff'
    'body': 'onoff = checkbox("on-off") : smooth(0.999);'

  'SH Sample and Hold':
    'prefix': 'SH Sample and Hold'
    'body': 'SH(trig,x) = (*(1 - trig) + x * trig) ~_;'

